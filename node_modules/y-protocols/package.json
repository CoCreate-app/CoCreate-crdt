{
  "_from": "y-protocols@^1.0.0",
  "_id": "y-protocols@1.0.1",
  "_inBundle": false,
  "_integrity": "sha512-QP3fCM7c2gGfUi2nqf8gspyO4VW23zv3kNqPNdD3wNxMbuNQenMyoDVZYEo12jzR4RQ3aaDfPK62Sf31SVOmfg==",
  "_location": "/y-protocols",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "y-protocols@^1.0.0",
    "name": "y-protocols",
    "escapedName": "y-protocols",
    "rawSpec": "^1.0.0",
    "saveSpec": null,
    "fetchSpec": "^1.0.0"
  },
  "_requiredBy": [
    "/y-webrtc",
    "/y-websocket"
  ],
  "_resolved": "https://registry.npmjs.org/y-protocols/-/y-protocols-1.0.1.tgz",
  "_shasum": "7855c900039a02b369590b8ae78bc6e1cbc13c9f",
  "_spec": "y-protocols@^1.0.0",
  "_where": "/home/ubuntu/environment/public/CoCreate-components/CoCreate-y-new/node_modules/y-webrtc",
  "author": {
    "name": "Kevin Jahns",
    "email": "kevin.jahns@protonmail.com"
  },
  "bugs": {
    "url": "https://github.com/yjs/y-protocols/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "lib0": "^0.2.28"
  },
  "deprecated": false,
  "description": "Yjs encoding protocols",
  "devDependencies": {
    "concurrently": "^5.2.0",
    "rollup": "^1.29.0",
    "standard": "^12.0.1",
    "typescript": "^3.8.3",
    "yjs": "^13.0.4"
  },
  "files": [
    "dist/*",
    "auth.*",
    "sync.*",
    "awareness.*"
  ],
  "funding": {
    "type": "GitHub Sponsors ‚ù§",
    "url": "https://github.com/sponsors/dmonad"
  },
  "homepage": "https://github.com/yjs/y-protocols#readme",
  "keywords": [
    "Yjs"
  ],
  "license": "MIT",
  "name": "y-protocols",
  "peerDependenies": {
    "yjs": "^13.0.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yjs/y-protocols.git"
  },
  "scripts": {
    "clean": "rm -rf dist *.d.ts */*.d.ts *.d.ts.map */*.d.ts.map",
    "debug": "rollup -c && concurrently 'rollup -wc' 'http-server -o test.html'",
    "dist": "rm -rf dist && rollup -c",
    "lint": "standard && tsc",
    "postpublish": "npm run clean",
    "preversion": "npm run dist && npm run test && npm run types",
    "test": "npm run lint && npm run dist && node dist/test.cjs",
    "types": "tsc --outDir ."
  },
  "standard": {
    "ignore": [
      "/dist",
      "/node_modules"
    ]
  },
  "type": "module",
  "version": "1.0.1"
}
